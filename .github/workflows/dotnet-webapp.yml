on:
  workflow_call:
    inputs:
      cache-layer-name:
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [ amd64, arm64v8 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # get entire git tree, required for nerdbank gitversioning
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare to build in arm
        if: matrix.architecture == 'arm64v8'
        shell: pwsh
        run: |
          sudo apt-get install qemu binfmt-support qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          sed -i 's/8.0.100-1-alpine3.18/8.0.100-alpine3.18/' Dockerfile
      - name: Cache Step
        if: ${{ inputs.cache-layer-name }}
        shell: pwsh
        run: |
          $packageUrl = "ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}".ToLower()

          docker pull "$($packageUrl):builder-${{ matrix.architecture }}" || true
          docker images --no-trunc
          docker build --target=${{ inputs.cache-layer-name }} -t "$($packageUrl):builder-${{ matrix.architecture }}" --build-arg ARCH=${{ matrix.architecture }} --cache-from="$($packageUrl):builder-${{ matrix.architecture }}" .
          docker buildx version
          docker images --no-trunc
          docker push "$($packageUrl):builder-${{ matrix.architecture }}"
      - name: Build and push the Docker image
        shell: pwsh
        run: |
          Push-Location src
          $version = (nbgv get-version -f json | ConvertFrom-Json).SimpleVersion
          Write-Host "Version $version"
          Pop-Location

          $packageUrl = "ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}".ToLower()

          docker buildx build -t "$($packageUrl):latest-${{ matrix.architecture }}" --build-arg ARCH=${{ matrix.architecture }} --cache-from="$($packageUrl):builder-${{ matrix.architecture }}" .
          docker tag "$($packageUrl):latest-${{ matrix.architecture }}" "$($packageUrl):$($version)-${{ matrix.architecture }}"
          docker push "$($packageUrl):latest-${{ matrix.architecture }}"
          docker push "$($packageUrl):$($version)-${{ matrix.architecture }}"
  push-manifest:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # get entire git tree, required for nerdbank gitversioning
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build manifest
        shell: pwsh
        run: |
          Push-Location src
          $version = (nbgv get-version -f json | ConvertFrom-Json).SimpleVersion
          Write-Host "Version $version"
          Pop-Location

          $packageUrl = "ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}".ToLower()

          docker manifest create `
                "$($packageUrl):latest" `
                --amend "$($packageUrl):latest-amd64" `
                --amend "$($packageUrl):latest-arm64v8"
          docker manifest create `
                "$($packageUrl):$($version)" `
                --amend "$($packageUrl):$($version)-amd64" `
                --amend "$($packageUrl):$($version)-arm64v8"
          docker manifest push "$($packageUrl):latest"
          docker manifest push "$($packageUrl):$($version)"
